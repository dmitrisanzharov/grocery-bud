{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","editItem","className","map","value","id","title","type","onClick","Alert","msg","removeAlert","list","useEffect","timeOut","setTimeout","clearTimeout","alertObj","show","getLocalStorage","localStorage","getItem","JSON","parse","App","useState","name","setName","setList","alert","setAlert","isEditing","setIsEditing","editID","setEditID","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","onChange","target","length","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f8104e5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa'\r\nconst List = ({items, removeItem, editItem}) => {\r\n  return (\r\n    <div className=\"grocery-list\">\r\n      {items.map(value=> {\r\n        const{id, title} = value;\r\n        return (\r\n          <article key={id} className='grocery-item'>\r\n            <p className=\"title\">{title}</p>\r\n            <div className=\"btn-container\">\r\n              <button type='button' className='edit-btn' \r\n              onClick={()=> editItem(id)}\r\n              ><FaEdit /></button>\r\n              <button type='button' className='delete-btn' \r\n              onClick={()=> removeItem(id)}\r\n              ><FaTrash /></button>\r\n            </div>\r\n          </article>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default List\r\n","import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({msg, type, removeAlert, list}) => {\r\n\r\n  useEffect(()=> {\r\n    const timeOut = setTimeout(()=> {\r\n      removeAlert();\r\n    },3000)\r\n\r\n    return () => clearTimeout(timeOut);\r\n  }, [list])\r\n\r\n  return (\r\n    <p className={`alert alert-${type}`}>{msg}</p>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState, useEffect } from 'react'\r\nimport List from './List'\r\nimport Alert from './Alert'\r\n\r\nlet alertObj = {\r\n  show: false,\r\n  msg: '',\r\n  type: '',\r\n}\r\n\r\nconst getLocalStorage = () => {\r\n  let list = localStorage.getItem('list');\r\n  if(list){\r\n    return JSON.parse(localStorage.getItem('list'));\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nfunction App() {\r\n\r\n  const[name,setName] = useState('');\r\n  let [list, setList] = useState(getLocalStorage);\r\n  const [alert, setAlert] = useState(alertObj);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editID, setEditID] = useState(null);\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if(!name){\r\n      // display alert\r\n      showAlert(true, 'danger', 'please add value');\r\n    }\r\n\r\n    else if(name && isEditing){\r\n      setList(list.map(value=> {\r\n        if(value.id === editID){\r\n          return {...value, title: name}\r\n        }\r\n        return value;\r\n      }))\r\n\r\n      setName('');\r\n      setEditID(null);\r\n      setIsEditing(false);\r\n      showAlert(true, 'success', 'value changed');\r\n\r\n    }\r\n\r\n    else {\r\n      showAlert(true, 'success', 'item added to the list');\r\n      const newItem = {id: new Date().getTime().toString(), title: name};\r\n      setList([...list, newItem]);\r\n      setName('');\r\n    }\r\n\r\n    // end of handle Submit\r\n  }\r\n\r\n  const showAlert = (show=false, type='', msg='')=> {\r\n    setAlert({show,type,msg})\r\n  }\r\n\r\n  const clearList = () => {\r\n    showAlert(true,'danger', 'empty list');\r\n    setList([]);\r\n  }\r\n\r\n  const removeItem = id => {\r\n    showAlert(true, 'danger', 'item removed');\r\n    setList(list.filter(value => value.id !== id));\r\n  }\r\n\r\n  const editItem = id => {\r\n      const specificItem = list.find(value=> value.id === id);\r\n      setIsEditing(true);\r\n      setEditID(id);\r\n      setName(specificItem.title);\r\n  }\r\n\r\n  useEffect(()=> {\r\n\r\n    localStorage.setItem('list', JSON.stringify(list))\r\n\r\n  }, [list])\r\n\r\n  return (\r\n    <section className=\"section-center\">\r\n\r\n      <form className='grocery-form' onSubmit={handleSubmit}>\r\n      {alert.show && <Alert {...alert} removeAlert={showAlert} list={list}/>}\r\n      <h3>grocery bud</h3>\r\n\r\n      <div className=\"form-control\">\r\n      <input type='text' className='grocery' placeholder='e.g. eggs' value={name} onChange={e=> setName(e.target.value)}/>\r\n      <button type='submit' className='submit-btn'>\r\n        {isEditing ? 'edit' : 'submit'}\r\n      </button>\r\n      </div>\r\n\r\n\r\n      </form>\r\n\r\n      {list.length > 0 && \r\n      \r\n      <div className=\"grocery-container\">\r\n      <List items={list} removeItem={removeItem} editItem={editItem}/>\r\n      <button className=\"clear-btn\" onClick={clearList}>clear items</button>\r\n    </div>\r\n      \r\n      \r\n      }\r\n\r\n \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}